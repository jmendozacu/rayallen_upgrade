<?php
/**
 * Attribute otions control
 *
 * @see Mage_Adminhtml_Block_Catalog_Product_Attribute_Edit_Tab_Options
 */
?>
<div>
    <ul class="messages">
        <li class="notice-msg">
            <ul>
                <li><?php echo 'If you do not specify an option value for a store then the default value will be used.' ?></li>
            </ul>
        </li>
    </ul>
</div>

<div class="fieldset-wrapper admin__collapsible-block-wrapper opened" id="manage-titles-wrapper">
    <div class="fieldset-wrapper-title">
        <strong class="admin__collapsible-title" data-toggle="collapse" data-target="#manage-titles-content">
            <span><?php /* @escapeNotVerified */ echo __('Manage Titles (Size, Color, etc.)') ?></span>
        </strong>
    </div>
    <div class="fieldset-wrapper-content in collapse" id="manage-titles-content">
        <fieldset class="fieldset">
            <table class="admin__control-table" id="attribute-labels-table">
                <thead>
                <tr>
                    <?php foreach ($block->getStores() as $_store): ?>
                        <th class="col-store-view"><?php /* @escapeNotVerified */ echo $_store->getName() ?></th>
                    <?php endforeach; ?>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <?php $_labels = $block->getLabelValues() ?>
                    <?php foreach ($block->getStores() as $_store): ?>
                        <td class="col-store-view">
                            <input class="input-text<?php if ($_store->getId() == \Magento\Store\Model\Store::DEFAULT_STORE_ID): ?> required-option<?php endif; ?>" type="text" name="frontend_label[<?php /* @escapeNotVerified */ echo $_store->getId() ?>]" value="<?php echo $block->escapeHtml($_labels[$_store->getId()]) ?>"<?php if ($block->getReadOnly()):?> disabled="disabled"<?php endif;?>/>
                        </td>
                    <?php endforeach; ?>
                </tr>
                </tbody>
            </table>
        </fieldset>
    </div>
</div>
<br/>
<script type="text/javascript">
    //<![CDATA[
    var optionDefaultInputType = 'radio';

    // IE removes quotes from element.innerHTML whenever it thinks they're not needed, which breaks html.
    var templateText =
        '<tr class="option-row">'+
        <?php foreach ($block->getStores() as $_store): ?>
        '<td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if($_store->getId()==0): ?> required-option<?php endif; ?>" type="text" /><\/td>'+
        <?php endforeach; ?>
        '<td><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}"><\/td>'+
        '<td class="a-center"><input class="input-radio" type="{{intype}}" name="default[]" value="{{id}}" {{checked}} /><\/td>'+
        '<td class="a-left">'+
        '<input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />'+
        '<?php echo $block->getDeleteButtonHtml() ?>'+
        '<\/td>'+
        '<\/tr>';

    var attributeOption = {
        table : $('attribute-options-table'),
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        templateText : templateText,
        itemCount : 0,
        totalItems : 0,
        add : function(data) {
            this.template = new Template(this.templateText, this.templateSyntax);
            if(!data.id){
                data = {};
                data.id  = 'option_'+this.itemCount;
            }
            if (!data.intype)
                data.intype = optionDefaultInputType;

            Element.insert(this.table, {after: this.template.evaluate(data)});
            this.bindRemoveButtons();
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },
        remove : function(event){
            var element = $(Event.findElement(event, 'tr')); // !!! Button already
            // have table parent in safari
            // Safari workaround
            element.ancestors().each(function(parentItem){
                if (parentItem.hasClassName('option-row')) {
                    element = parentItem;
                    throw $break;
                } else if (parentItem.hasClassName('box')) {
                    throw $break;
                }
            });


            if(element){
                var elementFlags = element.getElementsByClassName('delete-flag');
                if(elementFlags[0]){
                    elementFlags[0].value=1;
                }

                element.addClassName('no-display');
                element.addClassName('template');
                element.hide();
                this.totalItems--;
                this.updateItemsCountField();
            }
        },
        updateItemsCountField: function() {
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
        },
        bindRemoveButtons : function(){
            var buttons = $$('.delete-option');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }

    }
    if($('row-template')){
        $('row-template').remove();
    }
    attributeOption.bindRemoveButtons();

    if($('add_new_option_button')){
        Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
    }
    Validation.addAllThese([
        ['required-option', '<?php echo 'Failed' ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    Validation.addAllThese([
        ['required-options-count', '<?php echo 'Options is required' ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    <?php foreach ($block->getOptionValues() as $_value): ?>
    attributeOption.add(<?php echo $_value->toJson() ?>);
    <?php endforeach; ?>
    //]]>
</script>